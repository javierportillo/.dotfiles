###################
### KEYBINDINGS ###
###################

# See https://wiki.hyprland.org/Configuring/Keywords/

# Guidelines
#
# Objective: be as little intrusive as possible with application keybinds,
#   leave CTRL, ALT and SHIFT alone and only use less common combinations
#   with the SUPER or HYPR (CTRL_SHIFT_ALT together), if this keys are hard
#   to reach, have them remaped on firmware level to other keys (e.g., QMK)
#
# Before setting a key bind, check if already used
# Places to check: 
#   - this file
#   - bindkeys command for zsh
#   - which-keys plugin for nvim
#   - chrome: https://support.google.com/chrome/answer/157179?sjid=5551120845524550665-NA
#
# By default, use $MAIN, and the key should be a mnemonic for the thing it executes
# For things that come in two steps (setup and use) use $HYPR to set and $MAIN to use
# If the thing has more than one way of using it:
#   - for special keys like PrtScr or Media/Volume keys, use that, if not:
#   - start with $MAIN
#   - then $MAIN + CTRL
#   - then $MAIN + SHIFT
#   - then $MAIN + ALT
#
# tip: If you really need more than 2 ways of using somethig, it might be a better option
#   to just add them to the (d)menu. (also for things that just dont deserve a keybind)
#
# For other things that are conventions, or used in other environments, use that.
# e.g.: MOD + Enter for opening the default terminal emulator.

$MAIN = SUPER
$HYPR = CTRL_SHIFT_ALT

# Opening programs
bind = $MAIN,       Return,           exec, $terminal
bind = $MAIN CTRL,       E,           exec, dolphin # File Explorer
bind = $MAIN,            E,           exec, kitty yazi # File Explorer
bind = $MAIN,            R,           exec, fuzzel --show-actions # Run Applications
bind = $MAIN,       period,           exec, emote # ðŸ”¥ emoji picker
bind = $HYPR,            P,           exec, qtpass
bind = $MAIN,            P,           exec, pass-autotype
bind = $MAIN CTRL,       P,           exec, pass-autotype2
bind =      ,        Print,           exec, screenshots
bind = $MAIN,        space,           exec, pypr menu "Utilities Menu"

# Managing Window Manger
bind = $MAIN,       Escape,           exec, pypr menu "Exit Menu"
bind = $MAIN,            Q,           killactive,
bind = $MAIN,            F,           togglefloating
bind = $MAIN,            S,           togglesplit # dwindle
bind = $MAIN,            M,           fullscreen, 1
bind = $MAIN CTRL,       M,           fullscreen, 0
bind = $MAIN,            Z,           exec, pypr zoom
bind = $MAIN,          Tab,           focusurgentorlast
# hyprlang noerror true
bind = $MAIN CTRL,   space,           animatefocused
# hyprlang noerror false

# Groups
bind = $MAIN,            G,           togglegroup
bind = $MAIN,         Left,           movewindoworgroup, l
bind = $MAIN,        Right,           movewindoworgroup, r
bind = $MAIN,           Up,           movewindoworgroup, u
bind = $MAIN,         Down,           movewindoworgroup, d
bind = $MAIN,    semicolon,           moveoutofgroup
bind = $MAIN,  bracketleft,           changegroupactive, b
bind = $MAIN, bracketright,           changegroupactive, f

# Move focus
bind = $MAIN, H,                      movefocus, l
bind = $MAIN, L,                      movefocus, r
bind = $MAIN, K,                      movefocus, u
bind = $MAIN, J,                      movefocus, d

# Move window
bind = $MAIN CTRL, H,                 movewindow, l
bind = $MAIN CTRL, L,                 movewindow, r
bind = $MAIN CTRL, K,                 movewindow, u
bind = $MAIN CTRL, J,                 movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $MAIN, 1,                      workspace, 1
bind = $MAIN, 2,                      workspace, 2
bind = $MAIN, 3,                      workspace, 3
bind = $MAIN, 4,                      workspace, 4
bind = $MAIN, 5,                      workspace, 5
bind = $MAIN, 6,                      workspace, 6
bind = $MAIN, 7,                      workspace, 7
bind = $MAIN, 8,                      workspace, 8
bind = $MAIN, 9,                      workspace, 9
bind = $MAIN, 0,                      workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $MAIN CTRL, 1,                 movetoworkspace, 1
bind = $MAIN CTRL, 2,                 movetoworkspace, 2
bind = $MAIN CTRL, 3,                 movetoworkspace, 3
bind = $MAIN CTRL, 4,                 movetoworkspace, 4
bind = $MAIN CTRL, 5,                 movetoworkspace, 5
bind = $MAIN CTRL, 6,                 movetoworkspace, 6
bind = $MAIN CTRL, 7,                 movetoworkspace, 7
bind = $MAIN CTRL, 8,                 movetoworkspace, 8
bind = $MAIN CTRL, 9,                 movetoworkspace, 9
bind = $MAIN CTRL, 0,                 movetoworkspace, 10

# Special Workspaces
bind = $MAIN, T,                      togglespecialworkspace, magic
bind = $MAIN CTRL, T,                 movetoworkspace, special:magic

# Scroll through existing workspaces
bind = $MAIN, mouse_up, workspace, e+1
bind = $MAIN, mouse_down, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $MAIN, mouse:272,             movewindow
bindm = $MAIN, mouse:273,             resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise
bindel = ,mouse:276, exec,            swayosd-client --output-volume raise
bindel = ,mouse:275, exec,            swayosd-client --output-volume lower
bindel = ,XF86AudioLowerVolume, exec, swayosd-client --output-volume lower
bindl = ,XF86AudioMute, exec,         swayosd-client --output-volume mute-toggle
bindl = ,XF86AudioMicMute, exec,      wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

